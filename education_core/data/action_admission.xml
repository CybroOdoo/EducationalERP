<?xml version="1.0" encoding="UTF-8" ?>
<odoo>
    <data>
        <record id="action_create_student" model="ir.actions.server">
            <field name="name">Create Student</field>
            <field name="model_id" ref="model_education_application"/>
            <field name="state">code</field>
            <field name="binding_model_id" ref="model_education_application"/>
            <field name="code">
for rec in records:
    values = {
        'name': rec.name,
        'last_name': rec.last_name,
        'middle_name': rec.middle_name,
        'application_id': rec.id,
        'father_name': rec.father_name,
        'mother_name': rec.mother_name,
        'guardian_name': rec.guardian_name.id,
        'street': rec.street,
        'street2': rec.street2,
        'city': rec.city,
        'state_id': rec.state_id.id,
        'country_id': rec.country_id.id,
        'zip': rec.zip,
        'is_same_address': rec.is_same_address,
        'per_street': rec.per_street,
        'per_street2': rec.per_street2,
        'per_city': rec.per_city,
        'per_state_id': rec.per_state_id.id,
        'per_country_id': rec.per_country_id.id,
        'per_zip': rec.per_zip,
        'gender': rec.gender,
        'date_of_birth': rec.date_of_birth,
        'blood_group': rec.blood_group,
        'nationality': rec.nationality.id,
        'email': rec.email,
        'mobile': rec.mobile,
        'phone': rec.phone,
        'image_1920': rec.image,
        'is_student': True,
        'medium': rec.medium.id,
        'religion_id': rec.religion_id.id,
        'caste_id': rec.caste_id.id,
        'sec_lang': rec.sec_lang.id,
        'mother_tongue': rec.mother_tongue.id,
        'admission_class': rec.admission_class.id,
        'company_id': rec.company_id.id,
    }
    if not rec.is_same_address:
        pass
    else:
        values.update({
            'per_street': rec.street,
            'per_street2': rec.street2,
            'per_city': rec.city,
            'per_state_id': rec.state_id.id,
            'per_country_id': rec.country_id.id,
            'per_zip': rec.zip,
        })

    student = env['education.student'].create(values)
    rec.write({
        'state': 'done'
    })
            </field>
        </record>
    </data>
</odoo>